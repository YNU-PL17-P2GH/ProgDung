ソートのヒント

アルゴリズム2ーバブルソート

バブルソートを考えます。今、横に一列になって要素が並んでいることを想像してください。(2,1,0,4,3)これらを左から順に小さいものから並べること考えます。隣り合う要素の大小を比較します。まず、1,2を1,2に入れ替えます。(1,2,0,4,3)次に、2,0を比較して入れ替えます。(1,0,2,4,3)次に、2,4を比較します。入れ替えは起こりません(1,0,2,4,3)次に、4,3を比較して入れ替えます。(1,0,2,3,4)最終要素の比較が完了したらここで初めに戻ります。最も大きい要素が最右に来たはずです。また、1,0を比較して入れ替えます。(0,1,2,3,4)ここでは完了したので終了しますが、本当ならばまだ処理は続きます。例えば、(4,3,2,1,0)の場合であれば、0を最も左に持ってくるには4周入れ替えを行う必要があります。つまり要素数-1回繰り返しを行う必要があります。メソッドの大枠を考えるとwhile 要素数-1回	while要素数-1-周回数		隣り合う要素を比較して入れ替える	endend添え字は周回数と要素番号を持つでしょう。使う配列はarrayです。
