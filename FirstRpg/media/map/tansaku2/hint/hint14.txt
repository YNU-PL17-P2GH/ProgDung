ナップサックのヒント

アルゴリズム
ナップサック問題を考えましょう。ナップサック問題とは容量の決まったナップサックにものを詰め込むことを考えます。ただし、詰め込むものにはサイズと価値がきまっており、容量を超えないように価値を最大にすることを考えます。(アイテム数+1)*(ナップサック容量+1)の配列を考えるとわかりやすいでしょう。行にアイテムの種類、列に容量が0,1,2,...とならんだ2次元配列を考えます。1番目のアイテムをナップサックに入れます(1行目)。このとき一番目のアイテムのサイズ以上の列に1番目のアイテムの価値を入れます。入らない列には0を入れておきます。次に2番目のアイテムを入れます。このとき、入れないという選択肢がありますが、それは2番目のアイテムと1番目のアイテムのサイズの和が列の容量を超えてしまうときです。また、1,2両方は入らないが、2を入れたほうが価値が大きくなる場合、1の価値を削除して2の価値に上書きしましょう。あくまで行うのはこれまでの価値と次のアイテムの価値との加算と比較です。これを繰り返すと行列の右下に最大の価値が導出されているはずです。また、工夫すればどのアイテムをナップサックに入れたか求めることができます。knapsack(packjack)を考えます。packjack.getItemNum()でナップサックの容量を得られます。アイテム名はitemName[]で容量と価値はitems[][]です。packjack.pickItem(itemName[])でアイテムを取り出せます。